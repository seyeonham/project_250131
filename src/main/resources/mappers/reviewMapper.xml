<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project_250131.review.mapper.ReviewMapper">
    <select id="selectReviewPointByStoreId" parameterType="int">
        SELECT
            AVG(point)
        FROM
            `review`
        WHERE
            `storeId` = #{storeId}
    </select>
    <select id="selectReviewListByStoreId" parameterType="int">
        SELECT
            `id`
            ,`storeId`
            ,`userId`
            ,`imagePath`
            ,`point`
            ,`content`
            ,`createdAt`
            ,`updatedAt`
        FROM
            `review`
        WHERE
            `storeId` = #{storeId}
    </select>
    <select id="selectReviewListByUserId" parameterType="int">
        SELECT
            `id`
            ,`storeId`
            ,`userId`
            ,`imagePath`
            ,`point`
            ,`content`
            ,`createdAt`
            ,`updatedAt`
        FROM
            `review`
        WHERE
            `userId` = #{userId}
    </select>
    <select id="selectReviewCountByUserId" parameterType="int">
        SELECT
            COUNT(DISTINCT storeId)
        FROM
            `review`
        WHERE
            `userId` = #{userId}
    </select>
    <select id="selectRegularReviewCountByUserId" parameterType="int">
        SELECT
            CAST(COUNT(DISTINCT storeId) AS UNSIGNED)
        FROM
            `review`
        WHERE
            `userId` = #{userId}
        GROUP BY `storeId`
        HAVING COUNT(*) &gt;= 3
    </select>
    <select id="selectReviewById" parameterType="int">
        SELECT
            `id`
            ,`storeId`
            ,`userId`
            ,`imagePath`
            ,`point`
            ,`content`
            ,`createdAt`
            ,`updatedAt`
        FROM
            `review`
        WHERE
            `id` = #{id}
    </select>

    <insert id="insertReview" parameterType="map">
        INSERT INTO `review`
        (
            `storeId`
            ,`userId`
            ,`imagePath`
            ,`point`
            ,`content`
            ,`createdAt`
            ,`updatedAt`
        )
        VALUES
        (
            #{storeId}
            , #{userId}
            , #{imagePath}
            , #{point}
            , #{content}
            , NOW()
            , NOW()
        )
    </insert>

    <delete id="deleteReviewById" parameterType="int">
        DELETE FROM `review`
        WHERE
            `id` = #{id}
    </delete>
</mapper>